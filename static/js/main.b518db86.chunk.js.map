{"version":3,"sources":["registerServiceWorker.js","firebase.js","const.js","reducers/reducer_user.js","reducers/index.js","reducers/reducer_goals.js","reducers/reducer_completed_goals.js","components/AddGoal/index.jsx","components/GoalItem/index.jsx","components/GoalList/index.jsx","actions/index.js","components/CompleteGoalList/index.jsx","components/App.jsx","components/SignIn/index.jsx","components/SignUp/index.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","goalRef","ref","completeGoalRef","SIGNED_IN","SET_GOALS","SET_COMPLETED","user","email","combineReducers","action","type","goals","completeGoals","AddGoal","props","addGoal","title","push","className","placeholder","style","marginRight","onChange","event","setState","target","value","onClick","this","Component","connect","GoalItem","completeGoal","goal","serverKey","child","remove","GoalList","on","snap","forEach","val","key","setGoals","map","index","CompleteGoalList","setCompleted","set","clearCompleted","App","signOut","auth","SignIn","password","message","signInWithEmailAndPassword","margin","marginBottom","signIn","to","SignUp","createUserAndRetrieveDataWithEmailAndPassword","signUp","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","onAuthStateChanged","dispatch","logUser","browserHistory","replace","ReactDOM","render","path","history","component","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b518db86.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as firebase from 'firebase';\n\nvar config = {\n    apiKey: \"AIzaSyCXB6tpBvJ4JS9JCVoeKgAQ0suOlG1Frxw\",\n    authDomain: \"dej-shopping-list.firebaseapp.com\",\n    databaseURL: \"https://dej-shopping-list.firebaseio.com\",\n    projectId: \"dej-shopping-list\",\n    storageBucket: \"\",\n    messagingSenderId: \"319198489177\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config);\nexport const goalRef = firebase.database().ref('goals');\nexport const completeGoalRef = firebase.database().ref('completeGoals')","export const SIGNED_IN = 'SIGNED_IN';\nexport const SET_GOALS = 'SET_GOALS';\nexport const SET_COMPLETED = 'SET_COMPLETED';","import { SIGNED_IN } from '../const';\n\nlet user = {\n    email: null\n}\n\nexport default (state = user, action) => {\n    switch (action.type) {\n        case SIGNED_IN:\n            const { email } = action;\n            user = {\n                email\n            }\n            return user;\n        default:\n            return state;\n    }\n} ","import { combineReducers } from 'redux';\nimport user from './reducer_user';\nimport goals from './reducer_goals';\nimport completeGoals from './reducer_completed_goals';\n\nexport default combineReducers({\n    user,\n    goals,\n    completeGoals,\n})","import { SET_GOALS } from \"../const\";\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case SET_GOALS:\n            const { goals } = action;\n            return goals;\n        default:\n            return state;\n    }\n}","import { SET_COMPLETED } from '../const';\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case SET_COMPLETED:\n            const { completeGoals } = action;\n            return completeGoals;\n        default:\n            return state;\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { goalRef } from '../../firebase';\n\nclass AddGoal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: ''\n        }\n    }\n\n    addGoal = () => {\n        const { title } = this.state;\n        const { email } = this.props;\n        goalRef.push({email, title})\n    }\n\n    render() {\n        return (\n            <div className=\"form-inline\">\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Dodaj zakup\"\n                        className=\"form-control\"\n                        style={{marginRight: '5px'}}\n                        onChange={event => this.setState({title: event.target.value})}\n                    />\n                    <button\n                        className=\"btn btn-success\"\n                        type=\"button\"\n                        onClick={this.addGoal}                        \n                    >\n                        Wyślij\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user: { email }  } = state;\n    return {\n        email\n    }\n}\n\nexport default connect(mapStateToProps, null)(AddGoal);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { completeGoalRef, goalRef } from '../../firebase';\nimport './style.css';\n\nclass GoalItem extends Component {\n    completeGoal = () => {\n        // add to complete goals\n        // remove from this goal\n        const { email } = this.props.user;\n        const { title, serverKey } = this.props.goal;\n        goalRef.child(serverKey).remove();\n        completeGoalRef.push({ email, title })\n    }\n\n    render() {\n        const { email, title} = this.props.goal;\n        return (\n            <div className=\"goal\">\n                <strong>{title}</strong>\n                <span className=\"space\"> submitted by <em>{email}</em></span>\n                <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={this.completeGoal}\n                >\n                    Complete\n                </button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return {\n        user\n    }\n}\n\nexport default connect(mapStateToProps)(GoalItem);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setGoals } from '../../actions';\nimport { goalRef } from '../../firebase';\nimport GoalItem from '../GoalItem';\n\nclass GoalList extends Component {\n    componentDidMount() {\n        goalRef.on('value', snap => {\n            let goals = [];\n            snap.forEach(goal => {\n                const { email, title } = goal.val();\n                const serverKey = goal.key;\n                goals.push({ email, title, serverKey });\n            })\n            this.props.setGoals(goals);\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.props.goals.map((goal, index) => {\n                        return (\n                            <GoalItem key={index} goal={goal} />\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { goals } = state;\n    return {\n        goals\n    }\n}\n\nexport default connect(mapStateToProps, { setGoals })(GoalList);","import { SIGNED_IN, SET_GOALS, SET_COMPLETED } from '../const';\n\nexport function logUser(email) {\n    const action = {\n        type: SIGNED_IN,\n        email\n    }\n    return action;\n}\n\nexport function setGoals(goals) {\n    const action = {\n        type: SET_GOALS,\n        goals\n    }\n    return action;\n}\n\nexport function setCompleted(completeGoals) {\n    const action = {\n        type: SET_COMPLETED,\n        completeGoals\n    }\n    return action;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setCompleted } from '../../actions';\nimport { completeGoalRef } from '../../firebase';\nimport './style.css';\n\nclass CompleteGoalList extends Component {\n    componentDidMount() {\n        completeGoalRef.on('value', snap => {\n            let completeGoals = [];\n            snap.forEach(completeGoal => {\n                const { email, title } = completeGoal.val();\n                completeGoals.push({ email, title });\n            })\n            this.props.setCompleted(completeGoals);\n        })\n    }\n\n    clearCompleted() {\n        completeGoalRef.set([]);\n    }\n    \n    render() {\n        return (\n            <div>\n                {\n                    this.props.completeGoals.map((completeGoal, index) => {\n                        const { title, email } = completeGoal;\n                        return (\n                            <div\n                                className=\"goal\"\n                                key={index}\n                            >\n                                <strong>{title}</strong> completed by <em>{email}</em>\n                            </div>\n                        )\n                    })\n                }\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={this.clearCompleted}\n                >\n                    Clear All\n                </button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { completeGoals } = state;\n    return {\n        completeGoals\n    }\n}\n\nexport default connect(mapStateToProps, { setCompleted })(CompleteGoalList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseApp } from '../firebase';\nimport AddGoal from './AddGoal';\nimport GoalList from './GoalList';\nimport CompleteGoalList from './CompleteGoalList';\n\nimport './App.css';\n\nclass App extends Component {\n  signOut = () => {\n    firebaseApp.auth().signOut();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>Dej - Lista zakupów</h3>\n        <AddGoal />\n        <hr />\n        <h4>Lista</h4>\n        <GoalList />\n        <hr />\n        <h4>Kupione</h4>\n        <CompleteGoalList />\n        <hr />\n        <button\n          className=\"btn btn-danger\"\n          onClick={this.signOut}\n        >\n          Wyloguj\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nexport default connect(mapStateToProps, null)(App);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport { firebaseApp } from '../../firebase';\nimport './style.css';\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: {\n                message: '',\n            }\n        }\n    }\n\n    signIn() {\n        const { email, password } = this.state;\n        firebaseApp.auth().signInWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({error})\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"form-inline\" style={{margin: '5%'}}>\n                <h2>Sign In</h2>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        style={{marginBottom: '5px', marginRight: '5px'}}\n                        placeholder=\"email\"\n                        onChange={event => this.setState({email: event.target.value})}\n                    />\n                    <input\n                        className=\"form-control\"\n                        type=\"password\"\n                        style={{marginBottom: '5px', marginRight: '5px'}}\n                        placeholder=\"password\"\n                        onChange={event => this.setState({password: event.target.value})}\n                    />\n                    <button\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                        style={{marginBottom: '5px'}}\n                        onClick={() => this.signIn()}\n                    >\n                        Sign In\n                    </button>\n                </div>\n                <div>{this.state.error.message}</div>\n                <div><Link to={'/signup'}>Sign up instead</Link></div>\n            </div>\n        );\n    }\n}\n\nexport default SignIn;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport { firebaseApp } from '../../firebase';\nimport './style.css';\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: {\n                message: '',\n            }\n        }\n    }\n\n    signUp() {\n        const { email, password } = this.state;\n        firebaseApp.auth().createUserAndRetrieveDataWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({error})\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"form-inline\" style={{margin: '5%'}}>\n                <h2>Sign Up</h2>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        style={{marginBottom: '5px', marginRight: '5px'}}\n                        placeholder=\"email\"\n                        onChange={event => this.setState({email: event.target.value})}\n                    />\n                    <input\n                        className=\"form-control\"\n                        type=\"password\"\n                        style={{marginBottom: '5px', marginRight: '5px'}}\n                        placeholder=\"password\"\n                        onChange={event => this.setState({password: event.target.value})}\n                    />\n                    <button\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                        style={{marginBottom: '5px'}}\n                        onClick={() => this.signUp()}\n                    >\n                        Sign Up\n                    </button>\n                </div>\n                <div>{this.state.error.message}</div>\n                <div><Link to={'/signin'}>Already a user? Sign in instead</Link></div>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\nimport { Router, Route, browserHistory } from 'react-router';\nimport { firebaseApp } from './firebase';\nimport { logUser } from './actions';\nimport reducer from './reducers';\n\nimport App from './components/App';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\n\nconst store = createStore(reducer, /* preloadedState, */\n          window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\nfirebaseApp.auth().onAuthStateChanged(user => {\n    if (user) {\n        const { email } = user;\n        store.dispatch(logUser(email));\n        browserHistory.push('/app');\n    } else {\n        browserHistory.replace('/signin'); \n    }\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router path=\"/\" history={browserHistory}> \n            <Route path=\"/app\" component={App} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n        </Router>\n    </Provider>,\n    document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}